{"version":3,"sources":["assets/img/love.svg","components/Cards/index.jsx","App.js","index.js"],"names":["module","exports","Cards","cards","getTimePosted","currentDate","date","month","getMonth","days","getDate","hours","getHours","min","getMinutes","sec","getSeconds","dateConverter","pastDate","Date","toString","differenceDate","getTime","getTimeDifference","console","log","map","item","index","className","key","src","owner","iconfarm","iconserver","nsid","alt","username","location","country","dates","taken","farm","server","id","secret","onClick","alert","heart","views","replace","description","apiKey","apiUrlFromTopPhotos","App","useState","idPhotos","setIdPhotos","infoPhotos","setInfoPhotos","isLoading","setIsLoading","useEffect","axios","get","then","response","status","data","photos","photo","catch","lastInfo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bd37bf3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/love.43a7b12f.svg\";","import React from 'react';\r\n\r\nimport heart from '../../assets/img/love.svg';\r\nimport './index.scss';\r\n\r\n\r\n\r\nconst Cards = ({cards}) => {\r\n    console.log(cards)\r\n\r\n\r\n    function getTimePosted(currentDate) {\r\n      let differenceDate = getTimeDifference(currentDate);\r\n      return dateConverter(differenceDate);\r\n    }\r\n\r\n    function getTimeDifference(currentDate) {\r\n      let pastDate = new Date(currentDate.toString())\r\n      let differenceDate = new Date().getTime() - pastDate.getTime();\r\n      \r\n      return (new Date(differenceDate));\r\n    }\r\n\r\n    function dateConverter(date) {\r\n      let month = date.getMonth();\r\n      let days = date.getDate();\r\n      let hours = date.getHours();\r\n      let min = date.getMinutes();\r\n      let sec = date.getSeconds();\r\n\r\n      if (month) {\r\n        return month + 'mo';\r\n      } if (days) {\r\n        return days + 'd';\r\n      } if (hours) {\r\n        return hours + 'h'\r\n      } if (min) {\r\n        return min + 'min';\r\n      } if (sec) {\r\n        return sec + 's'\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {cards.map((item, index) => (\r\n          <div className=\"card\" key={index}>\r\n            <div className=\"card__header\">\r\n              <div className=\"card__header-profile-image\">\r\n                <img src={`http://farm${item.owner.iconfarm}.staticflickr.com/${item.owner.iconserver}/buddyicons/${item.owner.nsid}.jpg`}\r\n                  alt=\"prof-pic\"\r\n                />\r\n              </div>\r\n              <div className=\"card__header-profile-info\">\r\n                <div className=\"info__name-location\">\r\n                  <span className=\"name\">{item.owner.username}</span>\r\n                  {item.location && <span className=\"location\">{item.location.country['_content']}</span>}\r\n                </div>\r\n                <span className=\"info__shooting-time\">{getTimePosted(item.dates.taken)}</span>\r\n              </div>\r\n            </div>\r\n\r\n             <div className=\"card__picture\">\r\n              <img src={`http://farm${item.farm}.staticflickr.com/${item.server}/${item.id}_${item.secret}.jpg`} alt=\"timg12\"/>\r\n            </div>\r\n\r\n            <div className=\"card__info\">\r\n              <div className=\"info-likes\">\r\n                <img \r\n                  onClick={() => alert(`ID записи: ${index}`)} \r\n                  src={heart} \r\n                  alt=\"heart\"\r\n                />\r\n                <span>{item.views.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")}</span>\r\n              </div>\r\n                {item.description && <div className=\"info-text\">{item.description['_content']}</div>}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport Cards from './components/Cards'\n\nconst apiKey = '9781492bddf356d5157ba5a69a1b13ea';\nconst perPage = 10;\nconst apiUrlFromTopPhotos = `https://www.flickr.com/services/rest/?method=flickr.interestingness.getList&api_key=${apiKey}&per_page=${perPage}&format=json&nojsoncallback=1`;\n\nfunction App() {\n  const [idPhotos, setIdPhotos] = useState(null);\n  const [infoPhotos, setInfoPhotos] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    axios.get(apiUrlFromTopPhotos)\n    .then((response) => {\n      if (response.status === 200) {\n        const arrayPhoto = response.data.photos.photo;\n        let idPhotos = arrayPhoto.map((item) =>  item.id);\n        setIdPhotos(idPhotos);\n      }\n      return;\n    })\n    .catch(() => {\n      alert('Не удалось выгрузить фото!');\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!idPhotos) {\n      return;\n    }\n    idPhotos.map((item) => {\n      axios.get(`https://www.flickr.com/services/rest/?method=flickr.photos.getInfo&api_key=${apiKey}&photo_id=${item}&format=json&nojsoncallback=1`)\n      .then((response) =>  {\n        if(response.status === 200) {\n          let {id, secret, server, farm, owner, description, dates, views, location} = response.data.photo;\n          setInfoPhotos(lastInfo => [...lastInfo, {id, secret, server, farm, owner, description, dates, views, location}])\n        }\n      }).then(() => setIsLoading(true));\n    })\n  }, [idPhotos]);\n  \n  return (\n    <>\n      <div className=\"list-cards\">\n        {isLoading && infoPhotos.length === perPage ? <Cards cards={infoPhotos}/> : 'Загрузка....'}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}